- name: set variables centos/redhat
  set_fact:
    systemd_dir: /usr/lib/systemd/system
    config_dir: /etc/sysconfig
  when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'
  tags: always

- name: set variables debian/ubuntu
  set_fact:
    systemd_dir: /etc/systemd/system
    config_dir: /etc/default
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'
  tags: always

- name: ensure rabbitmq basedir ownership and permissions
  file:
    path: '{{ rabbitmq_basedir }}'
    state: directory
    mode: 0700

- name: ensure rabbitmq datador ownership and permissions
  file:
    path: '{{ rabbitmq_datadir }}'
    state: directory
    mode: 0700

- name: copy rabbitmq systemd file
  template:
    src: templates/rabbitmq.service.j2
    dest: '{{ systemd_dir }}/{{ rabbitmq_systemd }}'
  notify:
    - restart rabbitmq

- name: ensure rabbitmq started and enabled
  systemd:
    name: '{{ rabbitmq_systemd }}'
    state: started
    enabled: true

- name: ensure incoming_queue exists
  block:
    - name: check if incoming_queue exists
      shell: /usr/bin/docker exec -i rabbitmq-dltcollab rabbitmqadmin list queues | grep incoming_queue
      changed_when: no
      failed_when: no
      register: found_queue

    - name: declare incoming_queue
      shell: /usr/bin/docker exec -i rabbitmq-dltcollab rabbitmqadmin declare queue name=incoming_queue queue_type=classic
      when: found_queue.rc != 0
